<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InvalidPathSyntax" xml:space="preserve">
    <value>该路径的语法是无效的。
{0} &lt;错误&gt; {1}</value>
  </data>
  <data name="UnmatchedBracket" xml:space="preserve">
    <value>不匹配的括号。
{0}</value>
  </data>
  <data name="UnmatchedParen" xml:space="preserve">
    <value>括号不匹配。
{0}</value>
  </data>
  <data name="ResourceAnalyzer_Analyze_CouldNotFindResourceType" xml:space="preserve">
    <value>找不到资源类型“ {0}”的后备代码，保护可能不适用于该类型。</value>
  </data>
  <data name="ReflectionAnalyzer_Analyze_TracingArgumentsFailed" xml:space="preserve">
    <value>在{1}中跟踪{0}调用的参数失败。此处通过反射引用的成员将无法通过混淆名称来正确处理。</value>
  </data>
  <data name="AnalyzePhase_Name_Name_analysis" xml:space="preserve">
    <value>名称分析</value>
  </data>
  <data name="AnalyzePhaseAnalyzingText" xml:space="preserve">
    <value>分析中…</value>
  </data>
  <data name="NameProtectionDescription" xml:space="preserve">
    <value>、移除命名空间，并混淆所有类、方法、字段、枚举等名称，包括有声明public的访问修饰符，全部会混淆。</value>
  </data>
  <data name="NameProtectionName" xml:space="preserve">
    <value>名称保护</value>
  </data>
  <data name="NameProtectionExportMapPhaseName" xml:space="preserve">
    <value>导出符号图</value>
  </data>
  <data name="RenamePhaseName" xml:space="preserve">
    <value>重命名</value>
  </data>
  <data name="RenamePhaseRenamingText" xml:space="preserve">
    <value>正在重命名...</value>
  </data>
  <data name="AnalyzePhase_Execute_Building_VTables" xml:space="preserve">
    <value>正在生成VTables标识符列表...</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_Caliburn_Micro_found" xml:space="preserve">
    <value>找到Caliburn.Micro，正在启用兼容性。</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_Newtonsoft_Json_found" xml:space="preserve">
    <value>找到Newtonsoft.Json，正在启用兼容性。</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_Visual_Basic_Embedded_Runtime_found" xml:space="preserve">
    <value>找到Visual Basic Embedded Runtime，正在启用兼容性。</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_Visual_Studio_Composition_found" xml:space="preserve">
    <value>找到Visual Studio Composition，正在启用兼容性。</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_WinForms_found" xml:space="preserve">
    <value>找到WinForms，正在启用兼容性。</value>
  </data>
  <data name="AnalyzePhase_RegisterRenamers_WPF_found" xml:space="preserve">
    <value>找到WPF，正在启用兼容性。</value>
  </data>
</root>
