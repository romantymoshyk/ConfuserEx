//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Confuser.Renamer.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Confuser.Renamer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Building VTables &amp; identifier list... 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_Execute_Building_VTables {
            get {
                return ResourceManager.GetString("AnalyzePhase_Execute_Building_VTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Name analysis 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_Name_Name_analysis {
            get {
                return ResourceManager.GetString("AnalyzePhase_Name_Name_analysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Caliburn.Micro found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_Caliburn_Micro_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_Caliburn_Micro_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Newtonsoft.Json found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_Newtonsoft_Json_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_Newtonsoft_Json_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Visual Basic Embedded Runtime found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_Visual_Basic_Embedded_Runtime_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_Visual_Basic_Embedded_Runtime_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Visual Studio Composition found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_Visual_Studio_Composition_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_Visual_Studio_Composition_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 WinForms found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_WinForms_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_WinForms_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 WPF found, enabling compatibility. 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhase_RegisterRenamers_WPF_found {
            get {
                return ResourceManager.GetString("AnalyzePhase_RegisterRenamers_WPF_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Analyzing... 的本地化字符串。
        /// </summary>
        internal static string AnalyzePhaseAnalyzingText {
            get {
                return ResourceManager.GetString("AnalyzePhaseAnalyzingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The syntax is of the path is invalid.
        ///{0}&lt;ERROR&gt;{1} 的本地化字符串。
        /// </summary>
        internal static string InvalidPathSyntax {
            get {
                return ResourceManager.GetString("InvalidPathSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tracing arguments for {0} call in {1} failed. What ever member is referenced here by reflection won&apos;t be properly handled by the name obfuscation. ähnelt.
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid format string provided for the namespace format. Got: {0} ähnelt.
        /// </summary>
        internal static string NameService_ObfuscateName_InvalidFormat {
            get {
                return ResourceManager.GetString("NameService_ObfuscateName_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tracing arguments for {0} call in {1} failed. What ever member is referenced here by reflection won&apos;t be properly handled by the name obfuscation. ähnelt.
        ///   查找类似 This protection obfuscate the symbols&apos; name so the decompiled source code can neither be compiled nor read. 的本地化字符串。
        /// </summary>
        internal static string NameProtectionDescription {
            get {
                return ResourceManager.GetString("NameProtectionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Export symbol map 的本地化字符串。
        /// </summary>
        internal static string NameProtectionExportMapPhaseName {
            get {
                return ResourceManager.GetString("NameProtectionExportMapPhaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Name Protection 的本地化字符串。
        /// </summary>
        internal static string NameProtectionName {
            get {
                return ResourceManager.GetString("NameProtectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Tracing arguments for {0} call in {1} failed. What ever member is referenced here by reflection won&apos;t be properly handled by the name obfuscation. 的本地化字符串。
        /// </summary>
        internal static string ReflectionAnalyzer_Analyze_TracingArgumentsFailed {
            get {
                return ResourceManager.GetString("ReflectionAnalyzer_Analyze_TracingArgumentsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Renaming 的本地化字符串。
        /// </summary>
        internal static string RenamePhaseName {
            get {
                return ResourceManager.GetString("RenamePhaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Renaming... 的本地化字符串。
        /// </summary>
        internal static string RenamePhaseRenamingText {
            get {
                return ResourceManager.GetString("RenamePhaseRenamingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Could not find backing code for resource type &apos;{0}&apos;, protections may not apply to that type. 的本地化字符串。
        /// </summary>
        internal static string ResourceAnalyzer_Analyze_CouldNotFindResourceType {
            get {
                return ResourceManager.GetString("ResourceAnalyzer_Analyze_CouldNotFindResourceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Unmatched brackets.
        ///{0} 的本地化字符串。
        /// </summary>
        internal static string UnmatchedBracket {
            get {
                return ResourceManager.GetString("UnmatchedBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Unmatched parenthesis.
        ///{0} 的本地化字符串。
        /// </summary>
        internal static string UnmatchedParen {
            get {
                return ResourceManager.GetString("UnmatchedParen", resourceCulture);
            }
        }
    }
}
